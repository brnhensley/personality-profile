{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Code/capstone/src/components/Twitter.jsx\";\nimport React from 'react';\nimport sample from './../sample.json';\n\nfunction Twitter() {\n  console.log(sample);\n  let tweetText = [];\n  let tweetHTML = []; // sample.map((tweet) =>\n  //   <li>{tweet.text}</li>,\n  //   tweetText.push(tweet.text)\n  // );\n  // loops through full Twitter JSON lists them and add the tweets to an array\n\n  sample.forEach(tweet => {\n    tweetHTML.push(React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, tweet.text));\n    tweetText.push(tweet.text);\n  }); // add search name as JSON object key?\n  // Finds index of https link and cuts it off before creating master tweetText\n  // tweetText.push(tweet.text.slice(0, tweet.text.indexOf('https://')).trim());\n  // makes an array of every word tweeted\n\n  let wordArray = [];\n  tweetText.join(' ').split(' ').forEach(word => {\n    if (!word.startsWith('https')) {\n      wordArray.push(word);\n    }\n  }); //this works, but a lot of punctuation makes it in\n\n  wordArray.sort();\n  tweetText = wordArray.join(' ');\n  console.log(wordArray);\n  console.log(tweetText);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Twitter comp here makes API call\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, tweetHTML));\n}\n\nexport default Twitter;","map":{"version":3,"sources":["/Users/admin/Documents/Code/capstone/src/components/Twitter.jsx"],"names":["React","sample","Twitter","console","log","tweetText","tweetHTML","forEach","tweet","push","text","wordArray","join","split","word","startsWith","sort"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,OAAT,GAAmB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,MAAII,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAG,EAAhB,CAHiB,CAIjB;AACA;AACA;AACA;AAEA;;AACAL,EAAAA,MAAM,CAACM,OAAP,CAAeC,KAAK,IAAI;AACtBF,IAAAA,SAAS,CAACG,IAAV,CAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,IAAX,CAAf;AACAL,IAAAA,SAAS,CAACI,IAAV,CAAeD,KAAK,CAACE,IAArB;AACD,GAHD,EAViB,CAejB;AAEA;AACA;AAEA;;AACA,MAAIC,SAAS,GAAG,EAAhB;AACAN,EAAAA,SAAS,CAACO,IAAV,CAAe,GAAf,EAAoBC,KAApB,CAA0B,GAA1B,EAA+BN,OAA/B,CAAuCO,IAAI,IAAI;AAC7C,QAAI,CAACA,IAAI,CAACC,UAAL,CAAgB,OAAhB,CAAL,EAA+B;AAC7BJ,MAAAA,SAAS,CAACF,IAAV,CAAeK,IAAf;AACD;AACF,GAJD,EAtBiB,CA4BjB;;AACAH,EAAAA,SAAS,CAACK,IAAV;AACAX,EAAAA,SAAS,GAAGM,SAAS,CAACC,IAAV,CAAe,GAAf,CAAZ;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SADH,CAFF,CADF;AASD;;AAED,eAAeJ,OAAf","sourcesContent":["import React from 'react';\nimport sample from './../sample.json';\n\nfunction Twitter() {\n  console.log(sample);\n  let tweetText = [];\n  let tweetHTML = [];\n  // sample.map((tweet) =>\n  //   <li>{tweet.text}</li>,\n  //   tweetText.push(tweet.text)\n  // );\n\n  // loops through full Twitter JSON lists them and add the tweets to an array\n  sample.forEach(tweet => {\n    tweetHTML.push(<li>{tweet.text}</li>);\n    tweetText.push(tweet.text);\n  });\n\n  // add search name as JSON object key?\n\n  // Finds index of https link and cuts it off before creating master tweetText\n  // tweetText.push(tweet.text.slice(0, tweet.text.indexOf('https://')).trim());\n\n  // makes an array of every word tweeted\n  let wordArray = [];\n  tweetText.join(' ').split(' ').forEach(word => {\n    if (!word.startsWith('https')) {\n      wordArray.push(word)\n    }\n  });\n\n  //this works, but a lot of punctuation makes it in\n  wordArray.sort();\n  tweetText = wordArray.join(' ')\n\n  console.log(wordArray);\n  console.log(tweetText);\n\n  return (\n    <div>\n      <h2>Twitter comp here makes API call</h2>\n      <ul>\n        {tweetHTML}\n      </ul>\n    </div>\n  );\n\n}\n\nexport default Twitter;"]},"metadata":{},"sourceType":"module"}