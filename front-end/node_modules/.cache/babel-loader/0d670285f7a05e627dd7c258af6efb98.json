{"ast":null,"code":"//\n//  Parser - for Twitter Streaming API\n//\nvar util = require('util'),\n    EventEmitter = require('events').EventEmitter;\n\nvar Parser = module.exports = function () {\n  this.message = '';\n  EventEmitter.call(this);\n};\n\nutil.inherits(Parser, EventEmitter);\n\nParser.prototype.parse = function (chunk) {\n  this.message += chunk;\n  chunk = this.message;\n  var size = chunk.length,\n      start = 0,\n      offset = 0,\n      curr,\n      next;\n\n  while (offset < size) {\n    curr = chunk[offset];\n    next = chunk[offset + 1];\n\n    if (curr === '\\r' && next === '\\n') {\n      var piece = chunk.slice(start, offset);\n      start = offset += 2;\n\n      if (!piece.length) {\n        continue;\n      } //empty object\n\n\n      if (piece === 'Exceeded connection limit for user') {\n        this.emit('connection-limit-exceeded', new Error('Twitter says: ' + piece + '. Only instantiate one stream per set of credentials.'));\n        continue;\n      }\n\n      try {\n        var msg = JSON.parse(piece);\n      } catch (err) {\n        this.emit('error', new Error('Error parsing twitter reply: `' + piece + '`, error message `' + err + '`'));\n      } finally {\n        if (msg) this.emit('element', msg);\n        continue;\n      }\n    }\n\n    offset++;\n  }\n\n  this.message = chunk.slice(start, size);\n};","map":null,"metadata":{},"sourceType":"script"}