{"ast":null,"code":"import _objectSpread from \"/Users/Guest/Desktop/personality-profile/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Guest/Desktop/personality-profile/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Guest/Desktop/personality-profile/client/src/components/TwitterInput.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst WatsonInput = () => {\n  const _useState = useState({\n    watsonResponse: [],\n    twitterHandle: \"gwar\",\n    displayHandle: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        responce = _useState2[0],\n        setResponce = _useState2[1];\n\n  const callWatsonAPI = () => {\n    fetch(\"http://localhost:9000/watsonAPI\").then(res => res.json()).then(res => setResponce(_objectSpread({}, responce, {\n      watsonResponse: res\n    })));\n    setResponce(_objectSpread({}, responce, {\n      displayHandle: responce.twitterHandle\n    }));\n  };\n\n  const getState = () => console.log(responce);\n\n  useEffect(() => {\n    callWatsonAPI(); // this empty array functions to keep this from constatntly updating\n\n    return () => {//runs function when component unmounts\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: getState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"GET STATE\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, responce.displayHandle), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, JSON.stringify(responce.watsonResponse)), React.createElement(\"form\", {\n    onSubmit: callWatsonAPI,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"twitterHandle\",\n    placeholder: \"Enter a Twitter handle\",\n    onChange: event => setResponce(_objectSpread({}, responce, {\n      twitterHandle: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Search\")));\n};\n\nexport default WatsonInput;","map":{"version":3,"sources":["/Users/Guest/Desktop/personality-profile/client/src/components/TwitterInput.jsx"],"names":["React","useState","useEffect","WatsonInput","watsonResponse","twitterHandle","displayHandle","responce","setResponce","callWatsonAPI","fetch","then","res","json","getState","console","log","JSON","stringify","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBAEQF,QAAQ,CAAE;AAACG,IAAAA,cAAc,EAAE,EAAjB;AAAqBC,IAAAA,aAAa,EAAE,MAApC;AAA4CC,IAAAA,aAAa,EAAE;AAA3D,GAAF,CAFhB;AAAA;AAAA,QAEjBC,QAFiB;AAAA,QAEPC,WAFO;;AAIxB,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIJ,WAAW,mBAAKD,QAAL;AAAeH,MAAAA,cAAc,EAAEQ;AAA/B,OAF1B;AAIEJ,IAAAA,WAAW,mBAAKD,QAAL;AAAeD,MAAAA,aAAa,EAAEC,QAAQ,CAACF;AAAvC,OAAX;AACH,GAND;;AAQA,QAAMS,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAvB;;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa,GADC,CAEd;;AAEA,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,QAAQ,CAACD,aAAd,CAFA,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKW,IAAI,CAACC,SAAL,CAAeX,QAAQ,CAACH,cAAxB,CAAL,CAJF,EAKE;AAAM,IAAA,QAAQ,EAAEK,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,QAAQ,EAAEU,KAAK,IAAIX,WAAW,mBAAKD,QAAL;AAAeF,MAAAA,aAAa,EAAEc,KAAK,CAACC,MAAN,CAAaC;AAA3C,OAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CALF,CADF;AAqBD,CA5CD;;AA8CA,eAAelB,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\n\nconst WatsonInput = () => {\n\n  const [responce, setResponce] = useState( {watsonResponse: [], twitterHandle: \"gwar\", displayHandle: ''} )\n\n  const callWatsonAPI = () => {\n    fetch(\"http://localhost:9000/watsonAPI\")\n      .then(res => res.json())\n      .then(res => setResponce({...responce, watsonResponse: res}))\n\n      setResponce({...responce, displayHandle: responce.twitterHandle});\n  }\n\n  const getState = () => console.log(responce);\n\n  useEffect(() => {\n    callWatsonAPI();\n    // this empty array functions to keep this from constatntly updating\n\n    return () => {\n      //runs function when component unmounts\n    }\n  }, []);\n\n  return (\n    <div>\n      <button onClick={getState}>GET STATE</button>\n    <h1>{responce.displayHandle}</h1>\n      {/* <h1>{state.twitterHandle}</h1> */}\n      <h5>{JSON.stringify(responce.watsonResponse)}</h5>\n      <form onSubmit={callWatsonAPI}>\n        <input\n          type='text'\n          id='twitterHandle'\n          placeholder='Enter a Twitter handle'\n          onChange={event => setResponce({...responce, twitterHandle: event.target.value})}          \n        />\n        <button type='submit'>Search</button>\n      </form>\n    </div>\n  );\n\n\n\n\n}\n\nexport default WatsonInput;\n"]},"metadata":{},"sourceType":"module"}