{"ast":null,"code":"var _jsxFileName = \"/Users/Guest/Desktop/personality-profile/client/src/components/PersonalityBreakdown.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport watsonSample from './../watsonSample.json';\nimport PropTypes from 'prop-types';\n\nfunction PersonalityBreakdown(props) {\n  let display = '';\n  let results = '';\n  let data = JSON.parse(JSON.stringify(props.watsonResponse));\n  let sampleData = JSON.parse(JSON.stringify(props.watsonResponse));\n  console.log(data);\n\n  if (props.watsonResponse !== {}) {\n    display = \"Results: \"; // results = '{JSON.stringify(props.watsonResponse)}'\n\n    console.log(sampleData);\n  }\n\n  useEffect(() => {\n    // callWatsonAPI();\n    // console.log(JSON.stringify(watsonSample));\n    return () => {} //runs function when component unmounts\n    // this empty array functions to keep this from constatntly updating\n    ;\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"PersonalityBreakdown works\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, display));\n}\n\nPersonalityBreakdown.propTypes = {\n  watsonResponse: PropTypes.any\n};\nexport default PersonalityBreakdown;","map":{"version":3,"sources":["/Users/Guest/Desktop/personality-profile/client/src/components/PersonalityBreakdown.jsx"],"names":["React","useEffect","useState","watsonSample","PropTypes","PersonalityBreakdown","props","display","results","data","JSON","parse","stringify","watsonResponse","sampleData","console","log","propTypes","any"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAEnC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAK,CAACO,cAArB,CAAX,CAAX;AACA,MAAIC,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAK,CAACO,cAArB,CAAX,CAAjB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AAGA,MAAGH,KAAK,CAACO,cAAN,KAAyB,EAA5B,EAAgC;AAC9BN,IAAAA,OAAO,GAAG,WAAV,CAD8B,CAE9B;;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAED;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AAEA,WAAO,MAAM,CAEZ,CAFM,CACL;AAEF;AAHA;AAID,GARQ,EAQN,EARM,CAAT;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKM,OAAL,CAFF,CADF;AASD;;AAEDF,oBAAoB,CAACY,SAArB,GAAiC;AAC/BJ,EAAAA,cAAc,EAAET,SAAS,CAACc;AADK,CAAjC;AAIA,eAAeb,oBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport watsonSample from './../watsonSample.json'\nimport PropTypes from 'prop-types';\n\n\nfunction PersonalityBreakdown(props) {\n\n  let display = '';\n  let results = '';\n  let data = JSON.parse(JSON.stringify(props.watsonResponse));\n  let sampleData = JSON.parse(JSON.stringify(props.watsonResponse));\n  console.log(data);\n  \n\n  if(props.watsonResponse !== {}) {\n    display = \"Results: \"\n    // results = '{JSON.stringify(props.watsonResponse)}'\n    console.log(sampleData);\n    \n  }\n\n  useEffect(() => {\n    // callWatsonAPI();\n    // console.log(JSON.stringify(watsonSample));\n    \n    return () => {\n      //runs function when component unmounts\n    }\n    // this empty array functions to keep this from constatntly updating\n  }, []);\n  return (\n    <div>\n      <h1>PersonalityBreakdown works</h1>\n      <h3>{display}</h3>\n      {/* <h5>{props.watsonResponse.TRAITS}</h5> */}\n      {/* <h5>{JSON.stringify(watsonSample)}</h5> */}\n      {/* <h5>{data[0].TRAITS}</h5> */}\n    </div>\n  );\n}\n\nPersonalityBreakdown.propTypes = {\n  watsonResponse: PropTypes.any\n};\n\nexport default PersonalityBreakdown;"]},"metadata":{},"sourceType":"module"}