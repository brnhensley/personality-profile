{"ast":null,"code":"import _objectSpread from \"/Users/admin/Documents/Code/personality-profile/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/admin/Documents/Code/personality-profile/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/Code/personality-profile/client/src/components/WatsonInput.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport rd3 from 'react-d3-library';\nimport PersonalityBreakdown from './PersonalityBreakdown';\n\nconst WatsonInput = () => {\n  const _useState = useState({\n    watsonResponse: null,\n    twitterHandle: '',\n    displayHandle: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const callWatsonAPI = () => {\n    fetch(\"http://localhost:9000/watsonAPI?name=\".concat(data.twitterHandle)).then(res => res.json()).then(res => setData(_objectSpread({}, data, {\n      watsonResponse: res,\n      displayHandle: data.twitterHandle\n    }))).then();\n  }; // useful for testing purposes\n  // const getState = () => console.log(data);\n  // <button onClick={getState}>GET STATE</button>\n\n\n  let personalityBreakdown = null;\n\n  if (data.watsonResponse !== null) {\n    personalityBreakdown = React.createElement(PersonalityBreakdown, {\n      watsonResponse: data.watsonResponse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, data.displayHandle), React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      callWatsonAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"twitterHandle\",\n    placeholder: \"Enter a Twitter handle\",\n    onChange: event => setData(_objectSpread({}, data, {\n      twitterHandle: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Search\")), personalityBreakdown);\n};\n\nexport default WatsonInput;","map":{"version":3,"sources":["/Users/admin/Documents/Code/personality-profile/client/src/components/WatsonInput.jsx"],"names":["React","useState","useEffect","rd3","PersonalityBreakdown","WatsonInput","watsonResponse","twitterHandle","displayHandle","data","setData","callWatsonAPI","fetch","then","res","json","personalityBreakdown","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBAEAJ,QAAQ,CAAC;AAC/BK,IAAAA,cAAc,EAAE,IADe;AAE/BC,IAAAA,aAAa,EAAE,EAFgB;AAG/BC,IAAAA,aAAa,EAAE;AAHgB,GAAD,CAFR;AAAA;AAAA,QAEjBC,IAFiB;AAAA,QAEXC,OAFW;;AAQxB,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,gDAAyCH,IAAI,CAACF,aAA9C,EAAL,CACGM,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIJ,OAAO,mBAAMD,IAAN;AAAYH,MAAAA,cAAc,EAAEQ,GAA5B;AAAiCN,MAAAA,aAAa,EAAEC,IAAI,CAACF;AAArD,OAFtB,EAGGM,IAHH;AAID,GALD,CARwB,CAexB;AACA;AACA;;;AAEA,MAAIG,oBAAoB,GAAG,IAA3B;;AAEA,MAAIP,IAAI,CAACH,cAAL,KAAwB,IAA5B,EAAkC;AAChCU,IAAAA,oBAAoB,GAAG,oBAAC,oBAAD;AAAsB,MAAA,cAAc,EAAEP,IAAI,CAACH,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAI,CAACD,aAAV,CADF,EAGE;AAAM,IAAA,QAAQ,EAAES,KAAK,IAAI;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAP,MAAAA,aAAa;AACd,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,QAAQ,EAAEM,KAAK,IAAIP,OAAO,mBAAMD,IAAN;AAAYF,MAAAA,aAAa,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAAxC,OAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CAHF,EAkBGJ,oBAlBH,CADF;AA2BD,CApDD;;AAsDA,eAAeX,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport rd3 from 'react-d3-library'\nimport PersonalityBreakdown from './PersonalityBreakdown';\n\n\nconst WatsonInput = () => {\n\n  const [data, setData] = useState({\n    watsonResponse: null,\n    twitterHandle: '',\n    displayHandle: '',\n  })\n\n  const callWatsonAPI = () => {\n    fetch(`http://localhost:9000/watsonAPI?name=${data.twitterHandle}`)\n      .then(res => res.json())\n      .then(res => setData({ ...data, watsonResponse: res, displayHandle: data.twitterHandle }))\n      .then();\n  }\n\n  // useful for testing purposes\n  // const getState = () => console.log(data);\n  // <button onClick={getState}>GET STATE</button>\n\n  let personalityBreakdown = null;\n\n  if (data.watsonResponse !== null) {\n    personalityBreakdown = <PersonalityBreakdown watsonResponse={data.watsonResponse} />;\n  }\n\n  return (\n    <div>\n      <h1>{data.displayHandle}</h1>\n\n      <form onSubmit={event => {\n        event.preventDefault()\n        callWatsonAPI();\n      }}>\n\n        <input\n          type='text'\n          id='twitterHandle'\n          placeholder='Enter a Twitter handle'\n          onChange={event => setData({ ...data, twitterHandle: event.target.value })}\n        />\n\n        <button type='submit'>Search</button>\n      </form>\n\n      {personalityBreakdown}\n\n    </div>\n  );\n\n\n\n\n}\n\nexport default WatsonInput;\n"]},"metadata":{},"sourceType":"module"}