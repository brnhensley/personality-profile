{"ast":null,"code":"import _objectSpread from \"/Users/Guest/Desktop/personality-profile/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Guest/Desktop/personality-profile/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Guest/Desktop/personality-profile/client/src/components/WatsonInput.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport rd3 from 'react-d3-library';\nimport PersonalityBreakdown from './PersonalityBreakdown';\n\nconst WatsonInput = () => {\n  const _useState = useState({\n    watsonResponse: {},\n    twitterHandle: '',\n    displayHandle: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const callWatsonAPI = () => {\n    // setData({...data, displayHandle: data.twitterHandle });\n    fetch(\"http://localhost:9000/watsonAPI?name=\".concat(data.twitterHandle)).then(res => res.json()).then(res => setData(_objectSpread({}, data, {\n      watsonResponse: res,\n      displayHandle: data.twitterHandle\n    }))).then();\n  };\n\n  const getState = () => console.log(data);\n\n  useEffect(() => {\n    // callWatsonAPI();\n    console.log(JSON.stringify(data.watsonResponse));\n    return () => {} //runs function when component unmounts\n    // this empty array functions to keep this from constatntly updating\n    ;\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: getState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"GET STATE\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, data.displayHandle), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, JSON.stringify(data.watsonResponse)), React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      callWatsonAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"twitterHandle\",\n    placeholder: \"Enter a Twitter handle\",\n    onChange: event => setData(_objectSpread({}, data, {\n      twitterHandle: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Search\")), React.createElement(PersonalityBreakdown, {\n    watsonResponse: data.watsonResponse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default WatsonInput;","map":{"version":3,"sources":["/Users/Guest/Desktop/personality-profile/client/src/components/WatsonInput.jsx"],"names":["React","useState","useEffect","rd3","PersonalityBreakdown","WatsonInput","watsonResponse","twitterHandle","displayHandle","data","setData","callWatsonAPI","fetch","then","res","json","getState","console","log","JSON","stringify","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBAEAJ,QAAQ,CAAC;AAC/BK,IAAAA,cAAc,EAAE,EADe;AAE/BC,IAAAA,aAAa,EAAE,EAFgB;AAG/BC,IAAAA,aAAa,EAAE;AAHgB,GAAD,CAFR;AAAA;AAAA,QAEjBC,IAFiB;AAAA,QAEXC,OAFW;;AAQxB,QAAMC,aAAa,GAAG,MAAM;AAC1B;AACAC,IAAAA,KAAK,gDAAyCH,IAAI,CAACF,aAA9C,EAAL,CACGM,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIJ,OAAO,mBAAMD,IAAN;AAAYH,MAAAA,cAAc,EAAEQ,GAA5B;AAAiCN,MAAAA,aAAa,EAAEC,IAAI,CAACF;AAArD,OAFtB,EAGGM,IAHH;AAID,GAND;;AAQA,QAAMG,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYT,IAAZ,CAAvB;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeX,IAAI,CAACH,cAApB,CAAZ;AAEA,WAAO,MAAM,CAEZ,CAFM,CACL;AAEF;AAHA;AAID,GARQ,EAQN,EARM,CAAT;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEU,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,CAACD,aAAV,CAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKW,IAAI,CAACC,SAAL,CAAeX,IAAI,CAACH,cAApB,CAAL,CAJF,EAME;AAAM,IAAA,QAAQ,EAAEe,KAAK,IAAI;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAX,MAAAA,aAAa;AACd,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,QAAQ,EAAEU,KAAK,IAAIX,OAAO,mBAAMD,IAAN;AAAYF,MAAAA,aAAa,EAAEc,KAAK,CAACE,MAAN,CAAaC;AAAxC,OAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CANF,EAmBE,oBAAC,oBAAD;AAAsB,IAAA,cAAc,EAAEf,IAAI,CAACH,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AA4BD,CAxDD;;AA0DA,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport rd3 from 'react-d3-library'\nimport PersonalityBreakdown from './PersonalityBreakdown';\n\n\nconst WatsonInput = () => {\n\n  const [data, setData] = useState({\n    watsonResponse: {},\n    twitterHandle: '',\n    displayHandle: '',\n  })\n\n  const callWatsonAPI = () => {\n    // setData({...data, displayHandle: data.twitterHandle });\n    fetch(`http://localhost:9000/watsonAPI?name=${data.twitterHandle}`)\n      .then(res => res.json())\n      .then(res => setData({ ...data, watsonResponse: res, displayHandle: data.twitterHandle }))\n      .then();\n  }\n\n  const getState = () => console.log(data);\n\n  useEffect(() => {\n    // callWatsonAPI();\n    console.log(JSON.stringify(data.watsonResponse));\n    \n    return () => {\n      //runs function when component unmounts\n    }\n    // this empty array functions to keep this from constatntly updating\n  }, []);\n\n  return (\n    <div>\n      <button onClick={getState}>GET STATE</button>\n      <h1>{data.displayHandle}</h1>\n\n      <h5>{JSON.stringify(data.watsonResponse)}</h5>\n\n      <form onSubmit={event => {\n        event.preventDefault()\n        callWatsonAPI();\n      }}>\n        <input\n          type='text'\n          id='twitterHandle'\n          placeholder='Enter a Twitter handle'\n          onChange={event => setData({ ...data, twitterHandle: event.target.value })}\n        />\n        <button type='submit'>Search</button>\n      </form>\n\n      <PersonalityBreakdown watsonResponse={data.watsonResponse} />\n\n    </div>\n  );\n\n\n\n\n}\n\nexport default WatsonInput;\n"]},"metadata":{},"sourceType":"module"}