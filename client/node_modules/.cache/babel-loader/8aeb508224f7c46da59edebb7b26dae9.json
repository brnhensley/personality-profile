{"ast":null,"code":"var _jsxFileName = \"/Users/Guest/Desktop/personality-profile/client/src/components/PersonalityBreakdown.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport watsonSample from './../watsonSample.json';\nimport PropTypes from 'prop-types';\n\nfunction PersonalityBreakdown(props) {\n  let display = '';\n  let results = '';\n  let sample = JSON.parse(watsonSample[0][0]);\n  console.log(sample);\n\n  if (props.watsonResponse !== {}) {\n    display = \"Results: \"; // results = '{JSON.stringify(props.watsonResponse)}'\n\n    console.log(\"BREAKDOWN IS PASSING\");\n  }\n\n  useEffect(() => {\n    // callWatsonAPI();\n    console.log(JSON.stringify(watsonSample));\n    return () => {} //runs function when component unmounts\n    // this empty array functions to keep this from constatntly updating\n    ;\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"PersonalityBreakdown works\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, display), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.watsonResponse.TRAITS), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, JSON.stringify(watsonSample[0].TRAITS)));\n}\n\nPersonalityBreakdown.propTypes = {\n  watsonResponse: PropTypes.any\n};\nexport default PersonalityBreakdown;","map":{"version":3,"sources":["/Users/Guest/Desktop/personality-profile/client/src/components/PersonalityBreakdown.jsx"],"names":["React","useEffect","useState","watsonSample","PropTypes","PersonalityBreakdown","props","display","results","sample","JSON","parse","console","log","watsonResponse","stringify","TRAITS","propTypes","any"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAEnC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWR,YAAY,CAAC,CAAD,CAAZ,CAAgB,CAAhB,CAAX,CAAb;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AAGA,MAAGH,KAAK,CAACQ,cAAN,KAAyB,EAA5B,EAAgC;AAC9BP,IAAAA,OAAO,GAAG,WAAV,CAD8B,CAE9B;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAED;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,SAAL,CAAeZ,YAAf,CAAZ;AAEA,WAAO,MAAM,CAEZ,CAFM,CACL;AAEF;AAHA;AAID,GARQ,EAQN,EARM,CAAT;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,OAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACQ,cAAN,CAAqBE,MAA1B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAI,CAACK,SAAL,CAAeZ,YAAY,CAAC,CAAD,CAAZ,CAAgBa,MAA/B,CAAL,CAJF,CADF;AASD;;AAEDX,oBAAoB,CAACY,SAArB,GAAiC;AAC/BH,EAAAA,cAAc,EAAEV,SAAS,CAACc;AADK,CAAjC;AAIA,eAAeb,oBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport watsonSample from './../watsonSample.json'\nimport PropTypes from 'prop-types';\n\n\nfunction PersonalityBreakdown(props) {\n\n  let display = '';\n  let results = '';\n  let sample = JSON.parse(watsonSample[0][0])\n  console.log(sample);\n  \n\n  if(props.watsonResponse !== {}) {\n    display = \"Results: \"\n    // results = '{JSON.stringify(props.watsonResponse)}'\n    console.log(\"BREAKDOWN IS PASSING\");\n    \n  }\n\n  useEffect(() => {\n    // callWatsonAPI();\n    console.log(JSON.stringify(watsonSample));\n    \n    return () => {\n      //runs function when component unmounts\n    }\n    // this empty array functions to keep this from constatntly updating\n  }, []);\n  return (\n    <div>\n      <h1>PersonalityBreakdown works</h1>\n      <h3>{display}</h3>\n      <h5>{props.watsonResponse.TRAITS}</h5>\n      <h5>{JSON.stringify(watsonSample[0].TRAITS)}</h5>\n      {/* <h5>{results}</h5> */}\n    </div>\n  );\n}\n\nPersonalityBreakdown.propTypes = {\n  watsonResponse: PropTypes.any\n};\n\nexport default PersonalityBreakdown;"]},"metadata":{},"sourceType":"module"}