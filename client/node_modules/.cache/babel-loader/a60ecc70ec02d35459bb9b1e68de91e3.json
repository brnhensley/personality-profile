{"ast":null,"code":"import _objectSpread from \"/Users/admin/Documents/Code/personality-profile/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/admin/Documents/Code/personality-profile/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/Code/personality-profile/client/src/components/WatsonInput.jsx\";\nimport React, { useState, useEffect } from 'react'; // import rd3 from 'react-d3-library'  - For Later\n\nimport PersonalityBreakdown from './PersonalityBreakdown';\n\nconst WatsonInput = () => {\n  const _useState = useState({\n    watsonResponse: null,\n    twitterHandle: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const callWatsonAPI = () => {\n    fetch(\"http://localhost:9000/watsonAPI?name=\".concat(data.twitterHandle)).then(res => res.json()).then(res => setData(_objectSpread({}, data, {\n      watsonResponse: res\n    })));\n  };\n\n  let searchedUser = null;\n  let personalityBreakdown = null;\n\n  if (data.watsonResponse !== null) {\n    personalityBreakdown = React.createElement(PersonalityBreakdown, {\n      watsonResponse: data.watsonResponse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n    searchedUser = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Results for @\", data.twitterHandle);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Enter a Twitter user's handle to get a personality breakdown based on their posting history\"), React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      callWatsonAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"twitterHandle\",\n    placeholder: \"Enter a Twitter handle\",\n    onChange: event => setData(_objectSpread({}, data, {\n      twitterHandle: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Search\")), searchedUser, personalityBreakdown, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nexport default WatsonInput; // useful for ongoing testing purposes\n// const getState = () => console.log(data);\n// <button onClick={getState}>GET STATE</button>","map":{"version":3,"sources":["/Users/admin/Documents/Code/personality-profile/client/src/components/WatsonInput.jsx"],"names":["React","useState","useEffect","PersonalityBreakdown","WatsonInput","watsonResponse","twitterHandle","data","setData","callWatsonAPI","fetch","then","res","json","searchedUser","personalityBreakdown","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBAEAH,QAAQ,CAAC;AAC/BI,IAAAA,cAAc,EAAE,IADe;AAE/BC,IAAAA,aAAa,EAAE;AAFgB,GAAD,CAFR;AAAA;AAAA,QAEjBC,IAFiB;AAAA,QAEXC,OAFW;;AAOxB,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,gDAAyCH,IAAI,CAACD,aAA9C,EAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIJ,OAAO,mBAAMD,IAAN;AAAYF,MAAAA,cAAc,EAAEO;AAA5B,OAFtB;AAGD,GAJD;;AAMA,MAAIE,YAAY,GAAG,IAAnB;AACA,MAAIC,oBAAoB,GAAG,IAA3B;;AACA,MAAIR,IAAI,CAACF,cAAL,KAAwB,IAA5B,EAAkC;AAChCU,IAAAA,oBAAoB,GAAG,oBAAC,oBAAD;AAAsB,MAAA,cAAc,EAAER,IAAI,CAACF,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB;AACAS,IAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBP,IAAI,CAACD,aAAvB,CAAf;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGADF,EAEE;AAAM,IAAA,QAAQ,EAAEU,KAAK,IAAI;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAR,MAAAA,aAAa;AACd,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,QAAQ,EAAEO,KAAK,IAAIR,OAAO,mBAAMD,IAAN;AAAYD,MAAAA,aAAa,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAAxC,OAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CAFF,EAiBGL,YAjBH,EAkBGC,oBAlBH,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAoBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBR,CADF;AAyBD,CA7CD;;AA+CA,eAAeX,WAAf,C,CAEE;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import rd3 from 'react-d3-library'  - For Later\nimport PersonalityBreakdown from './PersonalityBreakdown';\n\n\nconst WatsonInput = () => {\n\n  const [data, setData] = useState({\n    watsonResponse: null,\n    twitterHandle: '',\n  })\n\n  const callWatsonAPI = () => {\n    fetch(`http://localhost:9000/watsonAPI?name=${data.twitterHandle}`)\n      .then(res => res.json())\n      .then(res => setData({ ...data, watsonResponse: res }))\n  }\n\n  let searchedUser = null;\n  let personalityBreakdown = null;\n  if (data.watsonResponse !== null) {\n    personalityBreakdown = <PersonalityBreakdown watsonResponse={data.watsonResponse} />;\n    searchedUser = <h1>Results for @{data.twitterHandle}</h1>\n  }\n\n  return (\n    <div>\n      <h3>Enter a Twitter user's handle to get a personality breakdown based on their posting history</h3>\n      <form onSubmit={event => {\n        event.preventDefault()\n        callWatsonAPI();\n      }}>\n\n        <input\n          type='text'\n          id='twitterHandle'\n          placeholder='Enter a Twitter handle'\n          onChange={event => setData({ ...data, twitterHandle: event.target.value })}\n        />\n\n        <button type='submit'>Search</button>\n      </form>\n\n      {searchedUser}\n      {personalityBreakdown}\n\n      <br /><br />\n    </div>\n  );\n\n}\n\nexport default WatsonInput;\n\n  // useful for ongoing testing purposes\n  // const getState = () => console.log(data);\n  // <button onClick={getState}>GET STATE</button>\n"]},"metadata":{},"sourceType":"module"}